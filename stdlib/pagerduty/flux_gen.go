// DO NOT EDIT: This file is autogenerated via the builtin command.

package pagerduty

import (
	flux "github.com/influxdata/flux"
	ast "github.com/influxdata/flux/ast"
)

func init() {
	flux.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 15,
					Line:   98,
				},
				File:   "pagerduty.flux",
				Source: "package pagerduty\n\nimport \"http\"\nimport \"json\"\nimport \"strings\"\n\n// `dedupKey` - adds a newline concatinated value of the sorted group key that is then sha256-hashed and hex-encoded to a column with the key `_pagerdutyDedupKey`.\nbuiltin dedupKey\n\noption defaultURL = \"https://events.pagerduty.com/v2/enqueue\"\n\n\n// `actionFromSeverity` converts a severity to an action; \"ok\" becomes \"resolve\" everything else converts to \"trigger\".\nactionFromSeverity = (severity)=> if strings.toLower(v:severity) == \"ok\" then \"resolve\" else \"trigger\"\n\n// `sendEvent` sends an event to PagerDuty, the description of some of these parameters taken from the pagerduty documentation at https://v2.developer.pagerduty.com/docs/send-an-event-events-api-v2\n// `pagerdutyURL` - sring - URL of the pagerduty endpoint.  Defaults to: `option defaultURL = \"https://events.pagerduty.com/v2/enqueue\"`\n// `token` - string - auth for pagerduty.\n// `routingKey` - string - routingKey.\n// `client` - string - name of the client sending the alert.\n// `clientURL` - string - url of the client sending the alert.\n// `dedupkey` - string - a per alert ID. It acts as deduplication key, that allows you to ack or change the severity of previous messages. Supports a maximum of 255 characters.\n// `class` - string - The class/type of the event, for example ping failure or cpu load.\n// `group` - string - Logical grouping of components of a service, for example app-stack.\n// `severity` - string - The perceived severity of the status the event is describing with respect to the affected system. This can be critical, error, warning or info.\n// `component` - string - Component of the source machine that is responsible for the event, for example mysql or eth0.\n// `source` - string - The unique location of the affected system, preferably a hostname or FQDN.\n// `summary` - string - A brief text summary of the event, used to generate the summaries/titles of any associated alerts. The maximum permitted length of this property is 1024 characters.\n// `timestamp` - string - The time at which the emitting tool detected or generated the event, in RFC 3339 nano format.\nsendEvent = (pagerdutyURL=defaultURL,\n    token=\"\",\n    routingKey,\n    client,\n    clientURL,\n    dedupKey,\n    class,\n    group,\n    severity,\n    component,\n    source,\n    summary,\n    timestamp) => {\n\n    payload = {\n            summary: summary,\n            timestamp: timestamp,\n            source: source,\n            severity: severity,\n            component: component,\n            group: group,\n            class: class,\n    }\n    data = {\n        payload: payload,\n        routing_key: routingKey,\n        dedup_key: dedupKey,\n        event_action: actionFromSeverity(severity: severity),\n        client: client,\n        client_url: clientURL,\n    }\n\n    headers = {\n        \"Authorization\": \"Token token=\" + token,\n        \"Accept\": \"application/vnd.pagerduty+json;version=2\",\n        \"Content-Type\": \"application/json\",\n    }\n    enc = json.encode(v: data)\n    return http.post(headers: headers, url: pagerdutyURL, data: enc)\n}\n\n// `endpoint` creates the endpoint for the PagerDuty external service.\n// `url` - string - URL of the slack endpoint. Defaults to: \"https://events.pagerduty.com/v2/enqueue\".\n// `token` - string - token for the pagerduty endpoint.\n// The returned factory function accepts a `mapFn` parameter.\n// The `mapFn` parameter must be a function that returns an object with `routingKey`, `client`, `client_url`,`class`,`group`, `severity`, `component`, `source`, `summary`, and `timestamp` as defined in the sendEvent function.\n// Note that while sendEvent accepts a dedup key, endpoint gets the dedupkey from the groupkey of the input table instead of it being handled by the `mapFn`.\nendpoint = (url=defaultURL, token=\"\") =>\n    (mapFn) =>\n        (tables=<-) => tables\n            |> dedupKey()\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                \n                return {r with _sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))}\n            })",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.BuiltinStatement{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   8,
					},
					File:   "pagerduty.flux",
					Source: "builtin dedupKey",
					Start: ast.Position{
						Column: 1,
						Line:   8,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   8,
						},
						File:   "pagerduty.flux",
						Source: "dedupKey",
						Start: ast.Position{
							Column: 9,
							Line:   8,
						},
					},
				},
				Name: "dedupKey",
			},
		}, &ast.OptionStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 62,
							Line:   10,
						},
						File:   "pagerduty.flux",
						Source: "defaultURL = \"https://events.pagerduty.com/v2/enqueue\"",
						Start: ast.Position{
							Column: 8,
							Line:   10,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 18,
								Line:   10,
							},
							File:   "pagerduty.flux",
							Source: "defaultURL",
							Start: ast.Position{
								Column: 8,
								Line:   10,
							},
						},
					},
					Name: "defaultURL",
				},
				Init: &ast.StringLiteral{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 62,
								Line:   10,
							},
							File:   "pagerduty.flux",
							Source: "\"https://events.pagerduty.com/v2/enqueue\"",
							Start: ast.Position{
								Column: 21,
								Line:   10,
							},
						},
					},
					Value: "https://events.pagerduty.com/v2/enqueue",
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 62,
						Line:   10,
					},
					File:   "pagerduty.flux",
					Source: "option defaultURL = \"https://events.pagerduty.com/v2/enqueue\"",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 103,
						Line:   14,
					},
					File:   "pagerduty.flux",
					Source: "actionFromSeverity = (severity)=> if strings.toLower(v:severity) == \"ok\" then \"resolve\" else \"trigger\"",
					Start: ast.Position{
						Column: 1,
						Line:   14,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 19,
							Line:   14,
						},
						File:   "pagerduty.flux",
						Source: "actionFromSeverity",
						Start: ast.Position{
							Column: 1,
							Line:   14,
						},
					},
				},
				Name: "actionFromSeverity",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 103,
							Line:   14,
						},
						File:   "pagerduty.flux",
						Source: "(severity)=> if strings.toLower(v:severity) == \"ok\" then \"resolve\" else \"trigger\"",
						Start: ast.Position{
							Column: 22,
							Line:   14,
						},
					},
				},
				Body: &ast.ConditionalExpression{
					Alternate: &ast.StringLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 103,
									Line:   14,
								},
								File:   "pagerduty.flux",
								Source: "\"trigger\"",
								Start: ast.Position{
									Column: 94,
									Line:   14,
								},
							},
						},
						Value: "trigger",
					},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 103,
								Line:   14,
							},
							File:   "pagerduty.flux",
							Source: "if strings.toLower(v:severity) == \"ok\" then \"resolve\" else \"trigger\"",
							Start: ast.Position{
								Column: 35,
								Line:   14,
							},
						},
					},
					Consequent: &ast.StringLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 88,
									Line:   14,
								},
								File:   "pagerduty.flux",
								Source: "\"resolve\"",
								Start: ast.Position{
									Column: 79,
									Line:   14,
								},
							},
						},
						Value: "resolve",
					},
					Test: &ast.BinaryExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 73,
									Line:   14,
								},
								File:   "pagerduty.flux",
								Source: "strings.toLower(v:severity) == \"ok\"",
								Start: ast.Position{
									Column: 38,
									Line:   14,
								},
							},
						},
						Left: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 64,
											Line:   14,
										},
										File:   "pagerduty.flux",
										Source: "v:severity",
										Start: ast.Position{
											Column: 54,
											Line:   14,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 64,
												Line:   14,
											},
											File:   "pagerduty.flux",
											Source: "v:severity",
											Start: ast.Position{
												Column: 54,
												Line:   14,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 55,
													Line:   14,
												},
												File:   "pagerduty.flux",
												Source: "v",
												Start: ast.Position{
													Column: 54,
													Line:   14,
												},
											},
										},
										Name: "v",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 64,
													Line:   14,
												},
												File:   "pagerduty.flux",
												Source: "severity",
												Start: ast.Position{
													Column: 56,
													Line:   14,
												},
											},
										},
										Name: "severity",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 65,
										Line:   14,
									},
									File:   "pagerduty.flux",
									Source: "strings.toLower(v:severity)",
									Start: ast.Position{
										Column: 38,
										Line:   14,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 53,
											Line:   14,
										},
										File:   "pagerduty.flux",
										Source: "strings.toLower",
										Start: ast.Position{
											Column: 38,
											Line:   14,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 45,
												Line:   14,
											},
											File:   "pagerduty.flux",
											Source: "strings",
											Start: ast.Position{
												Column: 38,
												Line:   14,
											},
										},
									},
									Name: "strings",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 53,
												Line:   14,
											},
											File:   "pagerduty.flux",
											Source: "toLower",
											Start: ast.Position{
												Column: 46,
												Line:   14,
											},
										},
									},
									Name: "toLower",
								},
							},
						},
						Operator: 17,
						Right: &ast.StringLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 73,
										Line:   14,
									},
									File:   "pagerduty.flux",
									Source: "\"ok\"",
									Start: ast.Position{
										Column: 69,
										Line:   14,
									},
								},
							},
							Value: "ok",
						},
					},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 31,
								Line:   14,
							},
							File:   "pagerduty.flux",
							Source: "severity",
							Start: ast.Position{
								Column: 23,
								Line:   14,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   14,
								},
								File:   "pagerduty.flux",
								Source: "severity",
								Start: ast.Position{
									Column: 23,
									Line:   14,
								},
							},
						},
						Name: "severity",
					},
					Value: nil,
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   69,
					},
					File:   "pagerduty.flux",
					Source: "sendEvent = (pagerdutyURL=defaultURL,\n    token=\"\",\n    routingKey,\n    client,\n    clientURL,\n    dedupKey,\n    class,\n    group,\n    severity,\n    component,\n    source,\n    summary,\n    timestamp) => {\n\n    payload = {\n            summary: summary,\n            timestamp: timestamp,\n            source: source,\n            severity: severity,\n            component: component,\n            group: group,\n            class: class,\n    }\n    data = {\n        payload: payload,\n        routing_key: routingKey,\n        dedup_key: dedupKey,\n        event_action: actionFromSeverity(severity: severity),\n        client: client,\n        client_url: clientURL,\n    }\n\n    headers = {\n        \"Authorization\": \"Token token=\" + token,\n        \"Accept\": \"application/vnd.pagerduty+json;version=2\",\n        \"Content-Type\": \"application/json\",\n    }\n    enc = json.encode(v: data)\n    return http.post(headers: headers, url: pagerdutyURL, data: enc)\n}",
					Start: ast.Position{
						Column: 1,
						Line:   30,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 10,
							Line:   30,
						},
						File:   "pagerduty.flux",
						Source: "sendEvent",
						Start: ast.Position{
							Column: 1,
							Line:   30,
						},
					},
				},
				Name: "sendEvent",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   69,
						},
						File:   "pagerduty.flux",
						Source: "(pagerdutyURL=defaultURL,\n    token=\"\",\n    routingKey,\n    client,\n    clientURL,\n    dedupKey,\n    class,\n    group,\n    severity,\n    component,\n    source,\n    summary,\n    timestamp) => {\n\n    payload = {\n            summary: summary,\n            timestamp: timestamp,\n            source: source,\n            severity: severity,\n            component: component,\n            group: group,\n            class: class,\n    }\n    data = {\n        payload: payload,\n        routing_key: routingKey,\n        dedup_key: dedupKey,\n        event_action: actionFromSeverity(severity: severity),\n        client: client,\n        client_url: clientURL,\n    }\n\n    headers = {\n        \"Authorization\": \"Token token=\" + token,\n        \"Accept\": \"application/vnd.pagerduty+json;version=2\",\n        \"Content-Type\": \"application/json\",\n    }\n    enc = json.encode(v: data)\n    return http.post(headers: headers, url: pagerdutyURL, data: enc)\n}",
						Start: ast.Position{
							Column: 13,
							Line:   30,
						},
					},
				},
				Body: &ast.Block{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 2,
								Line:   69,
							},
							File:   "pagerduty.flux",
							Source: "{\n\n    payload = {\n            summary: summary,\n            timestamp: timestamp,\n            source: source,\n            severity: severity,\n            component: component,\n            group: group,\n            class: class,\n    }\n    data = {\n        payload: payload,\n        routing_key: routingKey,\n        dedup_key: dedupKey,\n        event_action: actionFromSeverity(severity: severity),\n        client: client,\n        client_url: clientURL,\n    }\n\n    headers = {\n        \"Authorization\": \"Token token=\" + token,\n        \"Accept\": \"application/vnd.pagerduty+json;version=2\",\n        \"Content-Type\": \"application/json\",\n    }\n    enc = json.encode(v: data)\n    return http.post(headers: headers, url: pagerdutyURL, data: enc)\n}",
							Start: ast.Position{
								Column: 19,
								Line:   42,
							},
						},
					},
					Body: []ast.Statement{&ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   52,
								},
								File:   "pagerduty.flux",
								Source: "payload = {\n            summary: summary,\n            timestamp: timestamp,\n            source: source,\n            severity: severity,\n            component: component,\n            group: group,\n            class: class,\n    }",
								Start: ast.Position{
									Column: 5,
									Line:   44,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   44,
									},
									File:   "pagerduty.flux",
									Source: "payload",
									Start: ast.Position{
										Column: 5,
										Line:   44,
									},
								},
							},
							Name: "payload",
						},
						Init: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   52,
									},
									File:   "pagerduty.flux",
									Source: "{\n            summary: summary,\n            timestamp: timestamp,\n            source: source,\n            severity: severity,\n            component: component,\n            group: group,\n            class: class,\n    }",
									Start: ast.Position{
										Column: 15,
										Line:   44,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 29,
											Line:   45,
										},
										File:   "pagerduty.flux",
										Source: "summary: summary",
										Start: ast.Position{
											Column: 13,
											Line:   45,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   45,
											},
											File:   "pagerduty.flux",
											Source: "summary",
											Start: ast.Position{
												Column: 13,
												Line:   45,
											},
										},
									},
									Name: "summary",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 29,
												Line:   45,
											},
											File:   "pagerduty.flux",
											Source: "summary",
											Start: ast.Position{
												Column: 22,
												Line:   45,
											},
										},
									},
									Name: "summary",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 33,
											Line:   46,
										},
										File:   "pagerduty.flux",
										Source: "timestamp: timestamp",
										Start: ast.Position{
											Column: 13,
											Line:   46,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   46,
											},
											File:   "pagerduty.flux",
											Source: "timestamp",
											Start: ast.Position{
												Column: 13,
												Line:   46,
											},
										},
									},
									Name: "timestamp",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 33,
												Line:   46,
											},
											File:   "pagerduty.flux",
											Source: "timestamp",
											Start: ast.Position{
												Column: 24,
												Line:   46,
											},
										},
									},
									Name: "timestamp",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 27,
											Line:   47,
										},
										File:   "pagerduty.flux",
										Source: "source: source",
										Start: ast.Position{
											Column: 13,
											Line:   47,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 19,
												Line:   47,
											},
											File:   "pagerduty.flux",
											Source: "source",
											Start: ast.Position{
												Column: 13,
												Line:   47,
											},
										},
									},
									Name: "source",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   47,
											},
											File:   "pagerduty.flux",
											Source: "source",
											Start: ast.Position{
												Column: 21,
												Line:   47,
											},
										},
									},
									Name: "source",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 31,
											Line:   48,
										},
										File:   "pagerduty.flux",
										Source: "severity: severity",
										Start: ast.Position{
											Column: 13,
											Line:   48,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 21,
												Line:   48,
											},
											File:   "pagerduty.flux",
											Source: "severity",
											Start: ast.Position{
												Column: 13,
												Line:   48,
											},
										},
									},
									Name: "severity",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   48,
											},
											File:   "pagerduty.flux",
											Source: "severity",
											Start: ast.Position{
												Column: 23,
												Line:   48,
											},
										},
									},
									Name: "severity",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 33,
											Line:   49,
										},
										File:   "pagerduty.flux",
										Source: "component: component",
										Start: ast.Position{
											Column: 13,
											Line:   49,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   49,
											},
											File:   "pagerduty.flux",
											Source: "component",
											Start: ast.Position{
												Column: 13,
												Line:   49,
											},
										},
									},
									Name: "component",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 33,
												Line:   49,
											},
											File:   "pagerduty.flux",
											Source: "component",
											Start: ast.Position{
												Column: 24,
												Line:   49,
											},
										},
									},
									Name: "component",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   50,
										},
										File:   "pagerduty.flux",
										Source: "group: group",
										Start: ast.Position{
											Column: 13,
											Line:   50,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   50,
											},
											File:   "pagerduty.flux",
											Source: "group",
											Start: ast.Position{
												Column: 13,
												Line:   50,
											},
										},
									},
									Name: "group",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   50,
											},
											File:   "pagerduty.flux",
											Source: "group",
											Start: ast.Position{
												Column: 20,
												Line:   50,
											},
										},
									},
									Name: "group",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   51,
										},
										File:   "pagerduty.flux",
										Source: "class: class",
										Start: ast.Position{
											Column: 13,
											Line:   51,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   51,
											},
											File:   "pagerduty.flux",
											Source: "class",
											Start: ast.Position{
												Column: 13,
												Line:   51,
											},
										},
									},
									Name: "class",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   51,
											},
											File:   "pagerduty.flux",
											Source: "class",
											Start: ast.Position{
												Column: 20,
												Line:   51,
											},
										},
									},
									Name: "class",
								},
							}},
							With: nil,
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   60,
								},
								File:   "pagerduty.flux",
								Source: "data = {\n        payload: payload,\n        routing_key: routingKey,\n        dedup_key: dedupKey,\n        event_action: actionFromSeverity(severity: severity),\n        client: client,\n        client_url: clientURL,\n    }",
								Start: ast.Position{
									Column: 5,
									Line:   53,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   53,
									},
									File:   "pagerduty.flux",
									Source: "data",
									Start: ast.Position{
										Column: 5,
										Line:   53,
									},
								},
							},
							Name: "data",
						},
						Init: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   60,
									},
									File:   "pagerduty.flux",
									Source: "{\n        payload: payload,\n        routing_key: routingKey,\n        dedup_key: dedupKey,\n        event_action: actionFromSeverity(severity: severity),\n        client: client,\n        client_url: clientURL,\n    }",
									Start: ast.Position{
										Column: 12,
										Line:   53,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   54,
										},
										File:   "pagerduty.flux",
										Source: "payload: payload",
										Start: ast.Position{
											Column: 9,
											Line:   54,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 16,
												Line:   54,
											},
											File:   "pagerduty.flux",
											Source: "payload",
											Start: ast.Position{
												Column: 9,
												Line:   54,
											},
										},
									},
									Name: "payload",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   54,
											},
											File:   "pagerduty.flux",
											Source: "payload",
											Start: ast.Position{
												Column: 18,
												Line:   54,
											},
										},
									},
									Name: "payload",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 32,
											Line:   55,
										},
										File:   "pagerduty.flux",
										Source: "routing_key: routingKey",
										Start: ast.Position{
											Column: 9,
											Line:   55,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 20,
												Line:   55,
											},
											File:   "pagerduty.flux",
											Source: "routing_key",
											Start: ast.Position{
												Column: 9,
												Line:   55,
											},
										},
									},
									Name: "routing_key",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 32,
												Line:   55,
											},
											File:   "pagerduty.flux",
											Source: "routingKey",
											Start: ast.Position{
												Column: 22,
												Line:   55,
											},
										},
									},
									Name: "routingKey",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 28,
											Line:   56,
										},
										File:   "pagerduty.flux",
										Source: "dedup_key: dedupKey",
										Start: ast.Position{
											Column: 9,
											Line:   56,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   56,
											},
											File:   "pagerduty.flux",
											Source: "dedup_key",
											Start: ast.Position{
												Column: 9,
												Line:   56,
											},
										},
									},
									Name: "dedup_key",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 28,
												Line:   56,
											},
											File:   "pagerduty.flux",
											Source: "dedupKey",
											Start: ast.Position{
												Column: 20,
												Line:   56,
											},
										},
									},
									Name: "dedupKey",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 61,
											Line:   57,
										},
										File:   "pagerduty.flux",
										Source: "event_action: actionFromSeverity(severity: severity)",
										Start: ast.Position{
											Column: 9,
											Line:   57,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 21,
												Line:   57,
											},
											File:   "pagerduty.flux",
											Source: "event_action",
											Start: ast.Position{
												Column: 9,
												Line:   57,
											},
										},
									},
									Name: "event_action",
								},
								Value: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 60,
													Line:   57,
												},
												File:   "pagerduty.flux",
												Source: "severity: severity",
												Start: ast.Position{
													Column: 42,
													Line:   57,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 60,
														Line:   57,
													},
													File:   "pagerduty.flux",
													Source: "severity: severity",
													Start: ast.Position{
														Column: 42,
														Line:   57,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 50,
															Line:   57,
														},
														File:   "pagerduty.flux",
														Source: "severity",
														Start: ast.Position{
															Column: 42,
															Line:   57,
														},
													},
												},
												Name: "severity",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 60,
															Line:   57,
														},
														File:   "pagerduty.flux",
														Source: "severity",
														Start: ast.Position{
															Column: 52,
															Line:   57,
														},
													},
												},
												Name: "severity",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 61,
												Line:   57,
											},
											File:   "pagerduty.flux",
											Source: "actionFromSeverity(severity: severity)",
											Start: ast.Position{
												Column: 23,
												Line:   57,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   57,
												},
												File:   "pagerduty.flux",
												Source: "actionFromSeverity",
												Start: ast.Position{
													Column: 23,
													Line:   57,
												},
											},
										},
										Name: "actionFromSeverity",
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   58,
										},
										File:   "pagerduty.flux",
										Source: "client: client",
										Start: ast.Position{
											Column: 9,
											Line:   58,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 15,
												Line:   58,
											},
											File:   "pagerduty.flux",
											Source: "client",
											Start: ast.Position{
												Column: 9,
												Line:   58,
											},
										},
									},
									Name: "client",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   58,
											},
											File:   "pagerduty.flux",
											Source: "client",
											Start: ast.Position{
												Column: 17,
												Line:   58,
											},
										},
									},
									Name: "client",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   59,
										},
										File:   "pagerduty.flux",
										Source: "client_url: clientURL",
										Start: ast.Position{
											Column: 9,
											Line:   59,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 19,
												Line:   59,
											},
											File:   "pagerduty.flux",
											Source: "client_url",
											Start: ast.Position{
												Column: 9,
												Line:   59,
											},
										},
									},
									Name: "client_url",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   59,
											},
											File:   "pagerduty.flux",
											Source: "clientURL",
											Start: ast.Position{
												Column: 21,
												Line:   59,
											},
										},
									},
									Name: "clientURL",
								},
							}},
							With: nil,
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   66,
								},
								File:   "pagerduty.flux",
								Source: "headers = {\n        \"Authorization\": \"Token token=\" + token,\n        \"Accept\": \"application/vnd.pagerduty+json;version=2\",\n        \"Content-Type\": \"application/json\",\n    }",
								Start: ast.Position{
									Column: 5,
									Line:   62,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   62,
									},
									File:   "pagerduty.flux",
									Source: "headers",
									Start: ast.Position{
										Column: 5,
										Line:   62,
									},
								},
							},
							Name: "headers",
						},
						Init: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   66,
									},
									File:   "pagerduty.flux",
									Source: "{\n        \"Authorization\": \"Token token=\" + token,\n        \"Accept\": \"application/vnd.pagerduty+json;version=2\",\n        \"Content-Type\": \"application/json\",\n    }",
									Start: ast.Position{
										Column: 15,
										Line:   62,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 48,
											Line:   63,
										},
										File:   "pagerduty.flux",
										Source: "\"Authorization\": \"Token token=\" + token",
										Start: ast.Position{
											Column: 9,
											Line:   63,
										},
									},
								},
								Key: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 24,
												Line:   63,
											},
											File:   "pagerduty.flux",
											Source: "\"Authorization\"",
											Start: ast.Position{
												Column: 9,
												Line:   63,
											},
										},
									},
									Value: "Authorization",
								},
								Value: &ast.BinaryExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 48,
												Line:   63,
											},
											File:   "pagerduty.flux",
											Source: "\"Token token=\" + token",
											Start: ast.Position{
												Column: 26,
												Line:   63,
											},
										},
									},
									Left: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   63,
												},
												File:   "pagerduty.flux",
												Source: "\"Token token=\"",
												Start: ast.Position{
													Column: 26,
													Line:   63,
												},
											},
										},
										Value: "Token token=",
									},
									Operator: 5,
									Right: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 48,
													Line:   63,
												},
												File:   "pagerduty.flux",
												Source: "token",
												Start: ast.Position{
													Column: 43,
													Line:   63,
												},
											},
										},
										Name: "token",
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 61,
											Line:   64,
										},
										File:   "pagerduty.flux",
										Source: "\"Accept\": \"application/vnd.pagerduty+json;version=2\"",
										Start: ast.Position{
											Column: 9,
											Line:   64,
										},
									},
								},
								Key: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 17,
												Line:   64,
											},
											File:   "pagerduty.flux",
											Source: "\"Accept\"",
											Start: ast.Position{
												Column: 9,
												Line:   64,
											},
										},
									},
									Value: "Accept",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 61,
												Line:   64,
											},
											File:   "pagerduty.flux",
											Source: "\"application/vnd.pagerduty+json;version=2\"",
											Start: ast.Position{
												Column: 19,
												Line:   64,
											},
										},
									},
									Value: "application/vnd.pagerduty+json;version=2",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   65,
										},
										File:   "pagerduty.flux",
										Source: "\"Content-Type\": \"application/json\"",
										Start: ast.Position{
											Column: 9,
											Line:   65,
										},
									},
								},
								Key: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   65,
											},
											File:   "pagerduty.flux",
											Source: "\"Content-Type\"",
											Start: ast.Position{
												Column: 9,
												Line:   65,
											},
										},
									},
									Value: "Content-Type",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   65,
											},
											File:   "pagerduty.flux",
											Source: "\"application/json\"",
											Start: ast.Position{
												Column: 25,
												Line:   65,
											},
										},
									},
									Value: "application/json",
								},
							}},
							With: nil,
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   67,
								},
								File:   "pagerduty.flux",
								Source: "enc = json.encode(v: data)",
								Start: ast.Position{
									Column: 5,
									Line:   67,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 8,
										Line:   67,
									},
									File:   "pagerduty.flux",
									Source: "enc",
									Start: ast.Position{
										Column: 5,
										Line:   67,
									},
								},
							},
							Name: "enc",
						},
						Init: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   67,
										},
										File:   "pagerduty.flux",
										Source: "v: data",
										Start: ast.Position{
											Column: 23,
											Line:   67,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   67,
											},
											File:   "pagerduty.flux",
											Source: "v: data",
											Start: ast.Position{
												Column: 23,
												Line:   67,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 24,
													Line:   67,
												},
												File:   "pagerduty.flux",
												Source: "v",
												Start: ast.Position{
													Column: 23,
													Line:   67,
												},
											},
										},
										Name: "v",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   67,
												},
												File:   "pagerduty.flux",
												Source: "data",
												Start: ast.Position{
													Column: 26,
													Line:   67,
												},
											},
										},
										Name: "data",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 31,
										Line:   67,
									},
									File:   "pagerduty.flux",
									Source: "json.encode(v: data)",
									Start: ast.Position{
										Column: 11,
										Line:   67,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 22,
											Line:   67,
										},
										File:   "pagerduty.flux",
										Source: "json.encode",
										Start: ast.Position{
											Column: 11,
											Line:   67,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 15,
												Line:   67,
											},
											File:   "pagerduty.flux",
											Source: "json",
											Start: ast.Position{
												Column: 11,
												Line:   67,
											},
										},
									},
									Name: "json",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 22,
												Line:   67,
											},
											File:   "pagerduty.flux",
											Source: "encode",
											Start: ast.Position{
												Column: 16,
												Line:   67,
											},
										},
									},
									Name: "encode",
								},
							},
						},
					}, &ast.ReturnStatement{
						Argument: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 68,
											Line:   68,
										},
										File:   "pagerduty.flux",
										Source: "headers: headers, url: pagerdutyURL, data: enc",
										Start: ast.Position{
											Column: 22,
											Line:   68,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 38,
												Line:   68,
											},
											File:   "pagerduty.flux",
											Source: "headers: headers",
											Start: ast.Position{
												Column: 22,
												Line:   68,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 29,
													Line:   68,
												},
												File:   "pagerduty.flux",
												Source: "headers",
												Start: ast.Position{
													Column: 22,
													Line:   68,
												},
											},
										},
										Name: "headers",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 38,
													Line:   68,
												},
												File:   "pagerduty.flux",
												Source: "headers",
												Start: ast.Position{
													Column: 31,
													Line:   68,
												},
											},
										},
										Name: "headers",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 57,
												Line:   68,
											},
											File:   "pagerduty.flux",
											Source: "url: pagerdutyURL",
											Start: ast.Position{
												Column: 40,
												Line:   68,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 43,
													Line:   68,
												},
												File:   "pagerduty.flux",
												Source: "url",
												Start: ast.Position{
													Column: 40,
													Line:   68,
												},
											},
										},
										Name: "url",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 57,
													Line:   68,
												},
												File:   "pagerduty.flux",
												Source: "pagerdutyURL",
												Start: ast.Position{
													Column: 45,
													Line:   68,
												},
											},
										},
										Name: "pagerdutyURL",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 68,
												Line:   68,
											},
											File:   "pagerduty.flux",
											Source: "data: enc",
											Start: ast.Position{
												Column: 59,
												Line:   68,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 63,
													Line:   68,
												},
												File:   "pagerduty.flux",
												Source: "data",
												Start: ast.Position{
													Column: 59,
													Line:   68,
												},
											},
										},
										Name: "data",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 68,
													Line:   68,
												},
												File:   "pagerduty.flux",
												Source: "enc",
												Start: ast.Position{
													Column: 65,
													Line:   68,
												},
											},
										},
										Name: "enc",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 69,
										Line:   68,
									},
									File:   "pagerduty.flux",
									Source: "http.post(headers: headers, url: pagerdutyURL, data: enc)",
									Start: ast.Position{
										Column: 12,
										Line:   68,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 21,
											Line:   68,
										},
										File:   "pagerduty.flux",
										Source: "http.post",
										Start: ast.Position{
											Column: 12,
											Line:   68,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 16,
												Line:   68,
											},
											File:   "pagerduty.flux",
											Source: "http",
											Start: ast.Position{
												Column: 12,
												Line:   68,
											},
										},
									},
									Name: "http",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 21,
												Line:   68,
											},
											File:   "pagerduty.flux",
											Source: "post",
											Start: ast.Position{
												Column: 17,
												Line:   68,
											},
										},
									},
									Name: "post",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 69,
									Line:   68,
								},
								File:   "pagerduty.flux",
								Source: "return http.post(headers: headers, url: pagerdutyURL, data: enc)",
								Start: ast.Position{
									Column: 5,
									Line:   68,
								},
							},
						},
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 37,
								Line:   30,
							},
							File:   "pagerduty.flux",
							Source: "pagerdutyURL=defaultURL",
							Start: ast.Position{
								Column: 14,
								Line:   30,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 26,
									Line:   30,
								},
								File:   "pagerduty.flux",
								Source: "pagerdutyURL",
								Start: ast.Position{
									Column: 14,
									Line:   30,
								},
							},
						},
						Name: "pagerdutyURL",
					},
					Value: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 37,
									Line:   30,
								},
								File:   "pagerduty.flux",
								Source: "defaultURL",
								Start: ast.Position{
									Column: 27,
									Line:   30,
								},
							},
						},
						Name: "defaultURL",
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 13,
								Line:   31,
							},
							File:   "pagerduty.flux",
							Source: "token=\"\"",
							Start: ast.Position{
								Column: 5,
								Line:   31,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 10,
									Line:   31,
								},
								File:   "pagerduty.flux",
								Source: "token",
								Start: ast.Position{
									Column: 5,
									Line:   31,
								},
							},
						},
						Name: "token",
					},
					Value: &ast.StringLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   31,
								},
								File:   "pagerduty.flux",
								Source: "\"\"",
								Start: ast.Position{
									Column: 11,
									Line:   31,
								},
							},
						},
						Value: "",
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 15,
								Line:   32,
							},
							File:   "pagerduty.flux",
							Source: "routingKey",
							Start: ast.Position{
								Column: 5,
								Line:   32,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   32,
								},
								File:   "pagerduty.flux",
								Source: "routingKey",
								Start: ast.Position{
									Column: 5,
									Line:   32,
								},
							},
						},
						Name: "routingKey",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   33,
							},
							File:   "pagerduty.flux",
							Source: "client",
							Start: ast.Position{
								Column: 5,
								Line:   33,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 11,
									Line:   33,
								},
								File:   "pagerduty.flux",
								Source: "client",
								Start: ast.Position{
									Column: 5,
									Line:   33,
								},
							},
						},
						Name: "client",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 14,
								Line:   34,
							},
							File:   "pagerduty.flux",
							Source: "clientURL",
							Start: ast.Position{
								Column: 5,
								Line:   34,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 14,
									Line:   34,
								},
								File:   "pagerduty.flux",
								Source: "clientURL",
								Start: ast.Position{
									Column: 5,
									Line:   34,
								},
							},
						},
						Name: "clientURL",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 13,
								Line:   35,
							},
							File:   "pagerduty.flux",
							Source: "dedupKey",
							Start: ast.Position{
								Column: 5,
								Line:   35,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   35,
								},
								File:   "pagerduty.flux",
								Source: "dedupKey",
								Start: ast.Position{
									Column: 5,
									Line:   35,
								},
							},
						},
						Name: "dedupKey",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 10,
								Line:   36,
							},
							File:   "pagerduty.flux",
							Source: "class",
							Start: ast.Position{
								Column: 5,
								Line:   36,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 10,
									Line:   36,
								},
								File:   "pagerduty.flux",
								Source: "class",
								Start: ast.Position{
									Column: 5,
									Line:   36,
								},
							},
						},
						Name: "class",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 10,
								Line:   37,
							},
							File:   "pagerduty.flux",
							Source: "group",
							Start: ast.Position{
								Column: 5,
								Line:   37,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 10,
									Line:   37,
								},
								File:   "pagerduty.flux",
								Source: "group",
								Start: ast.Position{
									Column: 5,
									Line:   37,
								},
							},
						},
						Name: "group",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 13,
								Line:   38,
							},
							File:   "pagerduty.flux",
							Source: "severity",
							Start: ast.Position{
								Column: 5,
								Line:   38,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 13,
									Line:   38,
								},
								File:   "pagerduty.flux",
								Source: "severity",
								Start: ast.Position{
									Column: 5,
									Line:   38,
								},
							},
						},
						Name: "severity",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 14,
								Line:   39,
							},
							File:   "pagerduty.flux",
							Source: "component",
							Start: ast.Position{
								Column: 5,
								Line:   39,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 14,
									Line:   39,
								},
								File:   "pagerduty.flux",
								Source: "component",
								Start: ast.Position{
									Column: 5,
									Line:   39,
								},
							},
						},
						Name: "component",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 11,
								Line:   40,
							},
							File:   "pagerduty.flux",
							Source: "source",
							Start: ast.Position{
								Column: 5,
								Line:   40,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 11,
									Line:   40,
								},
								File:   "pagerduty.flux",
								Source: "source",
								Start: ast.Position{
									Column: 5,
									Line:   40,
								},
							},
						},
						Name: "source",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 12,
								Line:   41,
							},
							File:   "pagerduty.flux",
							Source: "summary",
							Start: ast.Position{
								Column: 5,
								Line:   41,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 12,
									Line:   41,
								},
								File:   "pagerduty.flux",
								Source: "summary",
								Start: ast.Position{
									Column: 5,
									Line:   41,
								},
							},
						},
						Name: "summary",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 14,
								Line:   42,
							},
							File:   "pagerduty.flux",
							Source: "timestamp",
							Start: ast.Position{
								Column: 5,
								Line:   42,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 14,
									Line:   42,
								},
								File:   "pagerduty.flux",
								Source: "timestamp",
								Start: ast.Position{
									Column: 5,
									Line:   42,
								},
							},
						},
						Name: "timestamp",
					},
					Value: nil,
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 15,
						Line:   98,
					},
					File:   "pagerduty.flux",
					Source: "endpoint = (url=defaultURL, token=\"\") =>\n    (mapFn) =>\n        (tables=<-) => tables\n            |> dedupKey()\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                \n                return {r with _sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))}\n            })",
					Start: ast.Position{
						Column: 1,
						Line:   77,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   77,
						},
						File:   "pagerduty.flux",
						Source: "endpoint",
						Start: ast.Position{
							Column: 1,
							Line:   77,
						},
					},
				},
				Name: "endpoint",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 15,
							Line:   98,
						},
						File:   "pagerduty.flux",
						Source: "(url=defaultURL, token=\"\") =>\n    (mapFn) =>\n        (tables=<-) => tables\n            |> dedupKey()\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                \n                return {r with _sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))}\n            })",
						Start: ast.Position{
							Column: 12,
							Line:   77,
						},
					},
				},
				Body: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 15,
								Line:   98,
							},
							File:   "pagerduty.flux",
							Source: "(mapFn) =>\n        (tables=<-) => tables\n            |> dedupKey()\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                \n                return {r with _sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))}\n            })",
							Start: ast.Position{
								Column: 5,
								Line:   78,
							},
						},
					},
					Body: &ast.FunctionExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   98,
								},
								File:   "pagerduty.flux",
								Source: "(tables=<-) => tables\n            |> dedupKey()\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                \n                return {r with _sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))}\n            })",
								Start: ast.Position{
									Column: 9,
									Line:   79,
								},
							},
						},
						Body: &ast.PipeExpression{
							Argument: &ast.PipeExpression{
								Argument: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   79,
											},
											File:   "pagerduty.flux",
											Source: "tables",
											Start: ast.Position{
												Column: 24,
												Line:   79,
											},
										},
									},
									Name: "tables",
								},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 26,
											Line:   80,
										},
										File:   "pagerduty.flux",
										Source: "tables\n            |> dedupKey()",
										Start: ast.Position{
											Column: 24,
											Line:   79,
										},
									},
								},
								Call: &ast.CallExpression{
									Arguments: nil,
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 26,
												Line:   80,
											},
											File:   "pagerduty.flux",
											Source: "dedupKey()",
											Start: ast.Position{
												Column: 16,
												Line:   80,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 24,
													Line:   80,
												},
												File:   "pagerduty.flux",
												Source: "dedupKey",
												Start: ast.Position{
													Column: 16,
													Line:   80,
												},
											},
										},
										Name: "dedupKey",
									},
								},
							},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 15,
										Line:   98,
									},
									File:   "pagerduty.flux",
									Source: "tables\n            |> dedupKey()\n            |> map(fn: (r) => {\n                obj = mapFn(r: r)\n                \n                return {r with _sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))}\n            })",
									Start: ast.Position{
										Column: 24,
										Line:   79,
									},
								},
							},
							Call: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 14,
												Line:   98,
											},
											File:   "pagerduty.flux",
											Source: "fn: (r) => {\n                obj = mapFn(r: r)\n                \n                return {r with _sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))}\n            }",
											Start: ast.Position{
												Column: 20,
												Line:   81,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   98,
												},
												File:   "pagerduty.flux",
												Source: "fn: (r) => {\n                obj = mapFn(r: r)\n                \n                return {r with _sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))}\n            }",
												Start: ast.Position{
													Column: 20,
													Line:   81,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 22,
														Line:   81,
													},
													File:   "pagerduty.flux",
													Source: "fn",
													Start: ast.Position{
														Column: 20,
														Line:   81,
													},
												},
											},
											Name: "fn",
										},
										Value: &ast.FunctionExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 14,
														Line:   98,
													},
													File:   "pagerduty.flux",
													Source: "(r) => {\n                obj = mapFn(r: r)\n                \n                return {r with _sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))}\n            }",
													Start: ast.Position{
														Column: 24,
														Line:   81,
													},
												},
											},
											Body: &ast.Block{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 14,
															Line:   98,
														},
														File:   "pagerduty.flux",
														Source: "{\n                obj = mapFn(r: r)\n                \n                return {r with _sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))}\n            }",
														Start: ast.Position{
															Column: 31,
															Line:   81,
														},
													},
												},
												Body: []ast.Statement{&ast.VariableAssignment{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 34,
																Line:   82,
															},
															File:   "pagerduty.flux",
															Source: "obj = mapFn(r: r)",
															Start: ast.Position{
																Column: 17,
																Line:   82,
															},
														},
													},
													ID: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 20,
																	Line:   82,
																},
																File:   "pagerduty.flux",
																Source: "obj",
																Start: ast.Position{
																	Column: 17,
																	Line:   82,
																},
															},
														},
														Name: "obj",
													},
													Init: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 33,
																		Line:   82,
																	},
																	File:   "pagerduty.flux",
																	Source: "r: r",
																	Start: ast.Position{
																		Column: 29,
																		Line:   82,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 33,
																			Line:   82,
																		},
																		File:   "pagerduty.flux",
																		Source: "r: r",
																		Start: ast.Position{
																			Column: 29,
																			Line:   82,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 30,
																				Line:   82,
																			},
																			File:   "pagerduty.flux",
																			Source: "r",
																			Start: ast.Position{
																				Column: 29,
																				Line:   82,
																			},
																		},
																	},
																	Name: "r",
																},
																Value: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 33,
																				Line:   82,
																			},
																			File:   "pagerduty.flux",
																			Source: "r",
																			Start: ast.Position{
																				Column: 32,
																				Line:   82,
																			},
																		},
																	},
																	Name: "r",
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 34,
																	Line:   82,
																},
																File:   "pagerduty.flux",
																Source: "mapFn(r: r)",
																Start: ast.Position{
																	Column: 23,
																	Line:   82,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 28,
																		Line:   82,
																	},
																	File:   "pagerduty.flux",
																	Source: "mapFn",
																	Start: ast.Position{
																		Column: 23,
																		Line:   82,
																	},
																},
															},
															Name: "mapFn",
														},
													},
												}, &ast.ReturnStatement{
													Argument: &ast.ObjectExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 27,
																	Line:   97,
																},
																File:   "pagerduty.flux",
																Source: "{r with _sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))}",
																Start: ast.Position{
																	Column: 24,
																	Line:   84,
																},
															},
														},
														Properties: []*ast.Property{&ast.Property{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 26,
																		Line:   97,
																	},
																	File:   "pagerduty.flux",
																	Source: "_sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))",
																	Start: ast.Position{
																		Column: 32,
																		Line:   84,
																	},
																},
															},
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 37,
																			Line:   84,
																		},
																		File:   "pagerduty.flux",
																		Source: "_sent",
																		Start: ast.Position{
																			Column: 32,
																			Line:   84,
																		},
																	},
																},
																Name: "_sent",
															},
															Value: &ast.CallExpression{
																Arguments: []ast.Expression{&ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 24,
																				Line:   97,
																			},
																			File:   "pagerduty.flux",
																			Source: "v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100",
																			Start: ast.Position{
																				Column: 46,
																				Line:   84,
																			},
																		},
																	},
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 24,
																					Line:   97,
																				},
																				File:   "pagerduty.flux",
																				Source: "v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100",
																				Start: ast.Position{
																					Column: 46,
																					Line:   84,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 47,
																						Line:   84,
																					},
																					File:   "pagerduty.flux",
																					Source: "v",
																					Start: ast.Position{
																						Column: 46,
																						Line:   84,
																					},
																				},
																			},
																			Name: "v",
																		},
																		Value: &ast.BinaryExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 24,
																						Line:   97,
																					},
																					File:   "pagerduty.flux",
																					Source: "2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100",
																					Start: ast.Position{
																						Column: 49,
																						Line:   84,
																					},
																				},
																			},
																			Left: &ast.IntegerLiteral{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 50,
																							Line:   84,
																						},
																						File:   "pagerduty.flux",
																						Source: "2",
																						Start: ast.Position{
																							Column: 49,
																							Line:   84,
																						},
																					},
																				},
																				Value: int64(2),
																			},
																			Operator: 17,
																			Right: &ast.BinaryExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 24,
																							Line:   97,
																						},
																						File:   "pagerduty.flux",
																						Source: "sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100",
																						Start: ast.Position{
																							Column: 55,
																							Line:   84,
																						},
																					},
																				},
																				Left: &ast.CallExpression{
																					Arguments: []ast.Expression{&ast.ObjectExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 45,
																									Line:   96,
																								},
																								File:   "pagerduty.flux",
																								Source: "pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp",
																								Start: ast.Position{
																									Column: 65,
																									Line:   84,
																								},
																							},
																						},
																						Properties: []*ast.Property{&ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 82,
																										Line:   84,
																									},
																									File:   "pagerduty.flux",
																									Source: "pagerdutyURL: url",
																									Start: ast.Position{
																										Column: 65,
																										Line:   84,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 77,
																											Line:   84,
																										},
																										File:   "pagerduty.flux",
																										Source: "pagerdutyURL",
																										Start: ast.Position{
																											Column: 65,
																											Line:   84,
																										},
																									},
																								},
																								Name: "pagerdutyURL",
																							},
																							Value: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 82,
																											Line:   84,
																										},
																										File:   "pagerduty.flux",
																										Source: "url",
																										Start: ast.Position{
																											Column: 79,
																											Line:   84,
																										},
																									},
																								},
																								Name: "url",
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 33,
																										Line:   85,
																									},
																									File:   "pagerduty.flux",
																									Source: "token: token",
																									Start: ast.Position{
																										Column: 21,
																										Line:   85,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 26,
																											Line:   85,
																										},
																										File:   "pagerduty.flux",
																										Source: "token",
																										Start: ast.Position{
																											Column: 21,
																											Line:   85,
																										},
																									},
																								},
																								Name: "token",
																							},
																							Value: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 33,
																											Line:   85,
																										},
																										File:   "pagerduty.flux",
																										Source: "token",
																										Start: ast.Position{
																											Column: 28,
																											Line:   85,
																										},
																									},
																								},
																								Name: "token",
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 47,
																										Line:   86,
																									},
																									File:   "pagerduty.flux",
																									Source: "routingKey: obj.routingKey",
																									Start: ast.Position{
																										Column: 21,
																										Line:   86,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 31,
																											Line:   86,
																										},
																										File:   "pagerduty.flux",
																										Source: "routingKey",
																										Start: ast.Position{
																											Column: 21,
																											Line:   86,
																										},
																									},
																								},
																								Name: "routingKey",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 47,
																											Line:   86,
																										},
																										File:   "pagerduty.flux",
																										Source: "obj.routingKey",
																										Start: ast.Position{
																											Column: 33,
																											Line:   86,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 36,
																												Line:   86,
																											},
																											File:   "pagerduty.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 33,
																												Line:   86,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 47,
																												Line:   86,
																											},
																											File:   "pagerduty.flux",
																											Source: "routingKey",
																											Start: ast.Position{
																												Column: 37,
																												Line:   86,
																											},
																										},
																									},
																									Name: "routingKey",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 39,
																										Line:   87,
																									},
																									File:   "pagerduty.flux",
																									Source: "client: obj.client",
																									Start: ast.Position{
																										Column: 21,
																										Line:   87,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 27,
																											Line:   87,
																										},
																										File:   "pagerduty.flux",
																										Source: "client",
																										Start: ast.Position{
																											Column: 21,
																											Line:   87,
																										},
																									},
																								},
																								Name: "client",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 39,
																											Line:   87,
																										},
																										File:   "pagerduty.flux",
																										Source: "obj.client",
																										Start: ast.Position{
																											Column: 29,
																											Line:   87,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 32,
																												Line:   87,
																											},
																											File:   "pagerduty.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 29,
																												Line:   87,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 39,
																												Line:   87,
																											},
																											File:   "pagerduty.flux",
																											Source: "client",
																											Start: ast.Position{
																												Column: 33,
																												Line:   87,
																											},
																										},
																									},
																									Name: "client",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 45,
																										Line:   88,
																									},
																									File:   "pagerduty.flux",
																									Source: "clientURL: obj.clientURL",
																									Start: ast.Position{
																										Column: 21,
																										Line:   88,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 30,
																											Line:   88,
																										},
																										File:   "pagerduty.flux",
																										Source: "clientURL",
																										Start: ast.Position{
																											Column: 21,
																											Line:   88,
																										},
																									},
																								},
																								Name: "clientURL",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 45,
																											Line:   88,
																										},
																										File:   "pagerduty.flux",
																										Source: "obj.clientURL",
																										Start: ast.Position{
																											Column: 32,
																											Line:   88,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 35,
																												Line:   88,
																											},
																											File:   "pagerduty.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 32,
																												Line:   88,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 45,
																												Line:   88,
																											},
																											File:   "pagerduty.flux",
																											Source: "clientURL",
																											Start: ast.Position{
																												Column: 36,
																												Line:   88,
																											},
																										},
																									},
																									Name: "clientURL",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 51,
																										Line:   89,
																									},
																									File:   "pagerduty.flux",
																									Source: "dedupKey: r._pagerdutyDedupKey",
																									Start: ast.Position{
																										Column: 21,
																										Line:   89,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 29,
																											Line:   89,
																										},
																										File:   "pagerduty.flux",
																										Source: "dedupKey",
																										Start: ast.Position{
																											Column: 21,
																											Line:   89,
																										},
																									},
																								},
																								Name: "dedupKey",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 51,
																											Line:   89,
																										},
																										File:   "pagerduty.flux",
																										Source: "r._pagerdutyDedupKey",
																										Start: ast.Position{
																											Column: 31,
																											Line:   89,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 32,
																												Line:   89,
																											},
																											File:   "pagerduty.flux",
																											Source: "r",
																											Start: ast.Position{
																												Column: 31,
																												Line:   89,
																											},
																										},
																									},
																									Name: "r",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 51,
																												Line:   89,
																											},
																											File:   "pagerduty.flux",
																											Source: "_pagerdutyDedupKey",
																											Start: ast.Position{
																												Column: 33,
																												Line:   89,
																											},
																										},
																									},
																									Name: "_pagerdutyDedupKey",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 37,
																										Line:   90,
																									},
																									File:   "pagerduty.flux",
																									Source: "class: obj.class",
																									Start: ast.Position{
																										Column: 21,
																										Line:   90,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 26,
																											Line:   90,
																										},
																										File:   "pagerduty.flux",
																										Source: "class",
																										Start: ast.Position{
																											Column: 21,
																											Line:   90,
																										},
																									},
																								},
																								Name: "class",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 37,
																											Line:   90,
																										},
																										File:   "pagerduty.flux",
																										Source: "obj.class",
																										Start: ast.Position{
																											Column: 28,
																											Line:   90,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 31,
																												Line:   90,
																											},
																											File:   "pagerduty.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 28,
																												Line:   90,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 37,
																												Line:   90,
																											},
																											File:   "pagerduty.flux",
																											Source: "class",
																											Start: ast.Position{
																												Column: 32,
																												Line:   90,
																											},
																										},
																									},
																									Name: "class",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 37,
																										Line:   91,
																									},
																									File:   "pagerduty.flux",
																									Source: "group: obj.group",
																									Start: ast.Position{
																										Column: 21,
																										Line:   91,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 26,
																											Line:   91,
																										},
																										File:   "pagerduty.flux",
																										Source: "group",
																										Start: ast.Position{
																											Column: 21,
																											Line:   91,
																										},
																									},
																								},
																								Name: "group",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 37,
																											Line:   91,
																										},
																										File:   "pagerduty.flux",
																										Source: "obj.group",
																										Start: ast.Position{
																											Column: 28,
																											Line:   91,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 31,
																												Line:   91,
																											},
																											File:   "pagerduty.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 28,
																												Line:   91,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 37,
																												Line:   91,
																											},
																											File:   "pagerduty.flux",
																											Source: "group",
																											Start: ast.Position{
																												Column: 32,
																												Line:   91,
																											},
																										},
																									},
																									Name: "group",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 43,
																										Line:   92,
																									},
																									File:   "pagerduty.flux",
																									Source: "severity: obj.severity",
																									Start: ast.Position{
																										Column: 21,
																										Line:   92,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 29,
																											Line:   92,
																										},
																										File:   "pagerduty.flux",
																										Source: "severity",
																										Start: ast.Position{
																											Column: 21,
																											Line:   92,
																										},
																									},
																								},
																								Name: "severity",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 43,
																											Line:   92,
																										},
																										File:   "pagerduty.flux",
																										Source: "obj.severity",
																										Start: ast.Position{
																											Column: 31,
																											Line:   92,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 34,
																												Line:   92,
																											},
																											File:   "pagerduty.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 31,
																												Line:   92,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 43,
																												Line:   92,
																											},
																											File:   "pagerduty.flux",
																											Source: "severity",
																											Start: ast.Position{
																												Column: 35,
																												Line:   92,
																											},
																										},
																									},
																									Name: "severity",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 45,
																										Line:   93,
																									},
																									File:   "pagerduty.flux",
																									Source: "component: obj.component",
																									Start: ast.Position{
																										Column: 21,
																										Line:   93,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 30,
																											Line:   93,
																										},
																										File:   "pagerduty.flux",
																										Source: "component",
																										Start: ast.Position{
																											Column: 21,
																											Line:   93,
																										},
																									},
																								},
																								Name: "component",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 45,
																											Line:   93,
																										},
																										File:   "pagerduty.flux",
																										Source: "obj.component",
																										Start: ast.Position{
																											Column: 32,
																											Line:   93,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 35,
																												Line:   93,
																											},
																											File:   "pagerduty.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 32,
																												Line:   93,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 45,
																												Line:   93,
																											},
																											File:   "pagerduty.flux",
																											Source: "component",
																											Start: ast.Position{
																												Column: 36,
																												Line:   93,
																											},
																										},
																									},
																									Name: "component",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 39,
																										Line:   94,
																									},
																									File:   "pagerduty.flux",
																									Source: "source: obj.source",
																									Start: ast.Position{
																										Column: 21,
																										Line:   94,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 27,
																											Line:   94,
																										},
																										File:   "pagerduty.flux",
																										Source: "source",
																										Start: ast.Position{
																											Column: 21,
																											Line:   94,
																										},
																									},
																								},
																								Name: "source",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 39,
																											Line:   94,
																										},
																										File:   "pagerduty.flux",
																										Source: "obj.source",
																										Start: ast.Position{
																											Column: 29,
																											Line:   94,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 32,
																												Line:   94,
																											},
																											File:   "pagerduty.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 29,
																												Line:   94,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 39,
																												Line:   94,
																											},
																											File:   "pagerduty.flux",
																											Source: "source",
																											Start: ast.Position{
																												Column: 33,
																												Line:   94,
																											},
																										},
																									},
																									Name: "source",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 41,
																										Line:   95,
																									},
																									File:   "pagerduty.flux",
																									Source: "summary: obj.summary",
																									Start: ast.Position{
																										Column: 21,
																										Line:   95,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 28,
																											Line:   95,
																										},
																										File:   "pagerduty.flux",
																										Source: "summary",
																										Start: ast.Position{
																											Column: 21,
																											Line:   95,
																										},
																									},
																								},
																								Name: "summary",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 41,
																											Line:   95,
																										},
																										File:   "pagerduty.flux",
																										Source: "obj.summary",
																										Start: ast.Position{
																											Column: 30,
																											Line:   95,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 33,
																												Line:   95,
																											},
																											File:   "pagerduty.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 30,
																												Line:   95,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 41,
																												Line:   95,
																											},
																											File:   "pagerduty.flux",
																											Source: "summary",
																											Start: ast.Position{
																												Column: 34,
																												Line:   95,
																											},
																										},
																									},
																									Name: "summary",
																								},
																							},
																						}, &ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 45,
																										Line:   96,
																									},
																									File:   "pagerduty.flux",
																									Source: "timestamp: obj.timestamp",
																									Start: ast.Position{
																										Column: 21,
																										Line:   96,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 30,
																											Line:   96,
																										},
																										File:   "pagerduty.flux",
																										Source: "timestamp",
																										Start: ast.Position{
																											Column: 21,
																											Line:   96,
																										},
																									},
																								},
																								Name: "timestamp",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 45,
																											Line:   96,
																										},
																										File:   "pagerduty.flux",
																										Source: "obj.timestamp",
																										Start: ast.Position{
																											Column: 32,
																											Line:   96,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 35,
																												Line:   96,
																											},
																											File:   "pagerduty.flux",
																											Source: "obj",
																											Start: ast.Position{
																												Column: 32,
																												Line:   96,
																											},
																										},
																									},
																									Name: "obj",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 45,
																												Line:   96,
																											},
																											File:   "pagerduty.flux",
																											Source: "timestamp",
																											Start: ast.Position{
																												Column: 36,
																												Line:   96,
																											},
																										},
																									},
																									Name: "timestamp",
																								},
																							},
																						}},
																						With: nil,
																					}},
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 18,
																								Line:   97,
																							},
																							File:   "pagerduty.flux",
																							Source: "sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                )",
																							Start: ast.Position{
																								Column: 55,
																								Line:   84,
																							},
																						},
																					},
																					Callee: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 64,
																									Line:   84,
																								},
																								File:   "pagerduty.flux",
																								Source: "sendEvent",
																								Start: ast.Position{
																									Column: 55,
																									Line:   84,
																								},
																							},
																						},
																						Name: "sendEvent",
																					},
																				},
																				Operator: 2,
																				Right: &ast.IntegerLiteral{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 24,
																								Line:   97,
																							},
																							File:   "pagerduty.flux",
																							Source: "100",
																							Start: ast.Position{
																								Column: 21,
																								Line:   97,
																							},
																						},
																					},
																					Value: int64(100),
																				},
																			},
																		},
																	}},
																	With: nil,
																}},
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 26,
																			Line:   97,
																		},
																		File:   "pagerduty.flux",
																		Source: "string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))",
																		Start: ast.Position{
																			Column: 39,
																			Line:   84,
																		},
																	},
																},
																Callee: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 45,
																				Line:   84,
																			},
																			File:   "pagerduty.flux",
																			Source: "string",
																			Start: ast.Position{
																				Column: 39,
																				Line:   84,
																			},
																		},
																	},
																	Name: "string",
																},
															},
														}},
														With: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 26,
																		Line:   84,
																	},
																	File:   "pagerduty.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 25,
																		Line:   84,
																	},
																},
															},
															Name: "r",
														},
													},
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 27,
																Line:   97,
															},
															File:   "pagerduty.flux",
															Source: "return {r with _sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))}",
															Start: ast.Position{
																Column: 17,
																Line:   84,
															},
														},
													},
												}},
											},
											Params: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 26,
															Line:   81,
														},
														File:   "pagerduty.flux",
														Source: "r",
														Start: ast.Position{
															Column: 25,
															Line:   81,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 26,
																Line:   81,
															},
															File:   "pagerduty.flux",
															Source: "r",
															Start: ast.Position{
																Column: 25,
																Line:   81,
															},
														},
													},
													Name: "r",
												},
												Value: nil,
											}},
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 15,
											Line:   98,
										},
										File:   "pagerduty.flux",
										Source: "map(fn: (r) => {\n                obj = mapFn(r: r)\n                \n                return {r with _sent: string(v: 2 == (sendEvent(pagerdutyURL: url,\n                    token: token, \n                    routingKey: obj.routingKey, \n                    client: obj.client, \n                    clientURL: obj.clientURL, \n                    dedupKey: r._pagerdutyDedupKey,\n                    class: obj.class,\n                    group: obj.group,\n                    severity: obj.severity, \n                    component: obj.component, \n                    source: obj.source, \n                    summary: obj.summary, \n                    timestamp: obj.timestamp,\n                ) / 100))}\n            })",
										Start: ast.Position{
											Column: 16,
											Line:   81,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 19,
												Line:   81,
											},
											File:   "pagerduty.flux",
											Source: "map",
											Start: ast.Position{
												Column: 16,
												Line:   81,
											},
										},
									},
									Name: "map",
								},
							},
						},
						Params: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   79,
									},
									File:   "pagerduty.flux",
									Source: "tables=<-",
									Start: ast.Position{
										Column: 10,
										Line:   79,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 16,
											Line:   79,
										},
										File:   "pagerduty.flux",
										Source: "tables",
										Start: ast.Position{
											Column: 10,
											Line:   79,
										},
									},
								},
								Name: "tables",
							},
							Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 19,
										Line:   79,
									},
									File:   "pagerduty.flux",
									Source: "<-",
									Start: ast.Position{
										Column: 17,
										Line:   79,
									},
								},
							}},
						}},
					},
					Params: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 11,
									Line:   78,
								},
								File:   "pagerduty.flux",
								Source: "mapFn",
								Start: ast.Position{
									Column: 6,
									Line:   78,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 11,
										Line:   78,
									},
									File:   "pagerduty.flux",
									Source: "mapFn",
									Start: ast.Position{
										Column: 6,
										Line:   78,
									},
								},
							},
							Name: "mapFn",
						},
						Value: nil,
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 27,
								Line:   77,
							},
							File:   "pagerduty.flux",
							Source: "url=defaultURL",
							Start: ast.Position{
								Column: 13,
								Line:   77,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 16,
									Line:   77,
								},
								File:   "pagerduty.flux",
								Source: "url",
								Start: ast.Position{
									Column: 13,
									Line:   77,
								},
							},
						},
						Name: "url",
					},
					Value: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 27,
									Line:   77,
								},
								File:   "pagerduty.flux",
								Source: "defaultURL",
								Start: ast.Position{
									Column: 17,
									Line:   77,
								},
							},
						},
						Name: "defaultURL",
					},
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 37,
								Line:   77,
							},
							File:   "pagerduty.flux",
							Source: "token=\"\"",
							Start: ast.Position{
								Column: 29,
								Line:   77,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 34,
									Line:   77,
								},
								File:   "pagerduty.flux",
								Source: "token",
								Start: ast.Position{
									Column: 29,
									Line:   77,
								},
							},
						},
						Name: "token",
					},
					Value: &ast.StringLiteral{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 37,
									Line:   77,
								},
								File:   "pagerduty.flux",
								Source: "\"\"",
								Start: ast.Position{
									Column: 35,
									Line:   77,
								},
							},
						},
						Value: "",
					},
				}},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   3,
					},
					File:   "pagerduty.flux",
					Source: "import \"http\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   3,
						},
						File:   "pagerduty.flux",
						Source: "\"http\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "http",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   4,
					},
					File:   "pagerduty.flux",
					Source: "import \"json\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   4,
						},
						File:   "pagerduty.flux",
						Source: "\"json\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "json",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "pagerduty.flux",
					Source: "import \"strings\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "pagerduty.flux",
						Source: "\"strings\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "strings",
			},
		}},
		Name: "pagerduty.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 18,
						Line:   1,
					},
					File:   "pagerduty.flux",
					Source: "package pagerduty",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 18,
							Line:   1,
						},
						File:   "pagerduty.flux",
						Source: "pagerduty",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "pagerduty",
			},
		},
	}},
	Package: "pagerduty",
	Path:    "pagerduty",
}
